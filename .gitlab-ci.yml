stages:
  - env
  - lint
  - build
  - scan
  - publish

variables:
  IMAGE_TAG: ${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}
  TRIVY_CACHE_DIR: ci/cache/trivy
  TRIVY_NO_PROGRESS: "true"
  # https://aquasecurity.github.io/trivy/v0.49/docs/configuration/filtering/#trivyignoreyaml
  TRIVY_IGNOREFILE: ./.trivyignore.yaml
  JB_VERSION: "0.5.1"
  JSONNET_GO_VERSION: "0.20.0"

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH
    - if: $CI_COMMIT_TAG

version:
  stage: env
  image: docker.io/bitnami/git:2.43.2
  script:
    - ci/scripts/version.sh | tee ci/reports/version.env
  artifacts:
    reports:
      dotenv:
        - ci/reports/version.env
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+/
      variables:
        IS_TAGGED_RELEASE: "true"

check-release-version:
  stage: lint
  image: docker.io/busybox:1.36
  script:
    - ci/scripts/check-release-version.sh
  needs: []
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+/

.with-trivy-cache:
  cache:
    - key: trivy
      paths:
        - $TRIVY_CACHE_DIR

.build:
  tags:
    - $ARCH
  stage: build
  image: quay.io/buildah/stable:v1.34
  script:
    - ci/scripts/log-into-ci-registry.sh
    - ci/scripts/build.sh

build-amd64:
  extends: .build
  variables:
    ARCH: amd64

build-arm64:
  extends: .build
  variables:
    ARCH: arm64

iac-check:
  extends: .with-trivy-cache
  stage: scan
  needs: []
  image:
    name: docker.io/aquasec/trivy:0.49.1
    entrypoint: [""]
  script:
    - trivy config --exit-code 3 .

.scan:
  extends: .with-trivy-cache
  tags:
    - $ARCH
  stage: scan
  image:
    name: docker.io/aquasec/trivy:0.49.1
    entrypoint: [""]
  variables:
    TRIVY_USERNAME: $CI_REGISTRY_USER
    TRIVY_PASSWORD: $CI_REGISTRY_PASSWORD
  script:
    - trivy image "${CI_REGISTRY_IMAGE}:${IMAGE_TAG}-${ARCH}"
    - trivy image --severity HIGH,CRITICAL --exit-code 3 --ignore-unfixed "${CI_REGISTRY_IMAGE}:${IMAGE_TAG}-${ARCH}"

scan-amd64:
  extends: .scan
  variables:
    ARCH: amd64
  needs: ["build-amd64"]

scan-arm64:
  extends: .scan
  variables:
    ARCH: arm64
  needs: ["build-arm64"]

publish:
  stage: publish
  image: quay.io/buildah/stable:v1.34
  script:
    - ci/scripts/log-into-ci-registry.sh
    - ci/scripts/publish.sh "jb-${JB_VERSION}" "jsonnet-go-${JSONNET_GO_VERSION}"
  needs:
    - version
    - scan-amd64
    - scan-arm64
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+/
      variables:
        IS_TAGGED_RELEASE: "true"
    - when: manual
